{"name":"saggy gathering","enabled":true,"description":"Sagira's gathering scripts! SAGGYHELP GATHERING for help.","type":"group","id":1,"items":[{"type":"alias","name":"Gather","enabled":true,"id":2,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"var argument = args[1];\nif (argument == \" nuts\" || argument == \" sugarcane\" || argument == \" grain\" || argument == \" saltwater\" || argument == \" seeds\" || argument == \" fruits\" || argument ==  \" cacao\" || argument == \" vegetable\" || argument == \" olives\" || argument == \" farm\" || argument == \" clay\" || argument == \" lumic\" || argument == \" dust\" || argument == null)\n{\n    run_function(\"gather_main\",argument,\"saggy gathering\");\n}\nelse if (argument == \" on\")\n{\n    set_variable(\"gathering\",1);\n    set_variable(\"gatherflags\",\"2222222222222\");\n    display_notice(\"GATHERING TRIGGERS ON\");\n    display_notice(\"ALL REAGANTS ENABLED\");\n}\nelse if (argument == \" off\")\n{\n    set_variable(\"gathering\",0);\n    set_variable(\"gatherflags\",\"1111111111111\");\n    display_notice(\"GATHERING TRIGGERS OFF\");\n    display_notice(\"ALL REAGANTS DISABLED\");\n}\nelse if (argument == \" status\")\n{\n    var flags = get_variable(\"gatherflags\").toString();\n    var types = [\"Nuts\",\"Sugarcane\",\"Grain\",\"Saltwater\",\"Seeds\",\"Fruits\",\"Cacao\",\"Vegetable\",\"Olives\",\"Farm (Milk/eggs)\",\"Clay\",\"Lumic\",\"Dust\"];\n    for (i=0;i<13;i++)\n    {\n        if (parseInt(flags[i]) & 1)\n        {\n            display_notice(types[i] + \": OFF\");\n        }\n        else\n        {\n            display_notice(types[i] + \": ON\");\n        }\n    }\n}\nelse\n{\n    send_command(\"gath\" + argument,1);\n}\n"}],"text":"^gath(\\s\\w+)?$"},{"type":"function","name":"gather_main","enabled":true,"id":4,"code":"var gtypes = [\"Nuts\",\"Sugarcane\",\"Grain\",\"Saltwater\",\"Seeds\",\"Fruits\",\"Cacao\",\"Vegetable\",\"Olives\",\"Farm\",\"Clay\",\"Lumic\",\"Dust\"];var gcommands = [\"gather nuts\",\"gather sugarcane\",\"gather grain\",\"gather saltwater\",\"gather seeds\",\"gather fruits\",\"gather cacao\",\"gather vegetable\",\"gather olives\",\"gather from farm\",\"gather clay\",\"gather lumic\",\"gather dust\"];\nvar gatherflags = get_variable(\"gatherflags\").toString();\nvar envmask = get_variable(\"envmask\").toString();\nfor (i=0;i<13;i++)\n{\n    if (parseInt(gatherflags[i]) != 1 && parseInt(gatherflags[i]) != 2)\n    {\n        gatherflags = \"error\";\n        break;\n    }\n}\nif (gatherflags == \"error\")\n{\n    set_variable(\"gatherflags\",\"1111111111111\");\n    display_notice(\"Error detected. Resetting all reagants to OFF.\");\n    return;\n}\nif (args == null)\n{\n    for (i=0; i<13; i++)\n    {\n        if (parseInt(gatherflags[i])-1 & parseInt(envmask[i]))\n        {\n            send_command(\"queue add eqbal \" + gcommands[i]);\n        }\n    }\n    return;\n}\nvar test = args.toLowerCase();\nswitch (test)\n{\n    case \" nuts\":\n        var index = 0;\n        break;\n    case \" sugarcane\":\n        var index = 1;\n        break;\n    case \" grain\":\n        var index = 2;\n        break;\n    case \" saltwater\":\n        var index = 3;\n        break;\n    case \" seeds\":\n        var index = 4;\n        break;\n    case \" fruits\":\n        var index = 5;\n        break;\n    case \" cacao\":\n        var index = 6;\n        break;\n    case \" vegetable\":\n        var index = 7;\n        break;\n    case \" olives\":\n        var index = 8;\n        break;\n    case \" farm\":\n        var index = 9;\n        break;\n    case \" clay\":\n        var index = 10;\n        break;\n    case \" lumic\":\n        var index = 11;\n        break;\n    case \" dust\":\n        var index = 12;\n        break;\n}\nif (gatherflags[index] & 1)\n{\n    gatherflags = parseInt(gatherflags) + 10**(12-index);\n    display_notice(gtypes[index] + \" gathering ON\");\n}\nelse\n{\n    gatherflags=parseInt(gatherflags) - 10**(12-index);\n    display_notice(gtypes[index] + \" gathering OFF\");\n}\ngatherflags = gatherflags;\nset_variable(\"gatherflags\",gatherflags);\n"},{"type":"alias","name":"Help","enabled":true,"id":5,"matching":"regexp","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"display_notice(\"Sagira's gathering scripts!\\nGeneral usage: GATH ON|OFF to enable/disable scripts.\\nGATH <object> to toggle gathering of a reagant.\\nGATH STATUS to report reagants that will be gathered.\\nThen just walk around in places that have what you're looking for, and you'll gather away!\\nNote that server-side queueing is currently necessary, CONFIG USEQUEUEING ON\")"}],"text":"^saggyhelp gathering$"},{"type":"function","name":"onGMCP","enabled":true,"id":6,"code":"if (get_variable(\"gathering\") == 1)\n    {\n    if (args.gmcp_method == \"Room.Info\")\n    {   \n        set_variable(\"newroom\",args.gmcp_args.num);\n        if (get_variable(\"newroom\") != get_variable(\"oldroom\"))\n        {\n            var room = args.gmcp_args.environment;\n            switch (room)\n            {\n                case \"Forest\":\n                    set_variable(\"envmask\",\"1000100000000\");\n                    break;\n                case \"Grassland\":\n                    if (args.gmcp_args.name == \"Among the fields\")\n                    {\n                        set_variable(\"envmask\",\"0000000001000\");\n                    }\n                    else\n                    {\n                        set_variable(\"envmask\",\"0110000000000\");\n                    }\n                    break;\n                case \"Ocean\":\n                    set_variable(\"envmask\",\"0001000000000\");\n                    break;\n                case \"Garden\":\n                    set_variable(\"envmask\",\"0000110100000\");\n                    break;\n                case \"Jungle\":\n                    set_variable(\"envmask\",\"0000111000000\");\n                    break;\n                case \"Valley\":\n                    set_variable(\"envmask\",\"0000000010000\");\n                    break;\n                case \"River\":\n                    set_variable(\"envmask\",\"0000000000100\");\n                    break;\n                case \"Natural underground\":\n                    set_variable(\"envmask\",\"0000000000011\");\n                    break;\n                default:\n                    set_variable(\"envmask\",\"0000000000000\");\n            }\n                    run_function(\"gather_main\",null,\"saggy gathering\");\n        }\n        set_variable(\"oldroom\",args.gmcp_args.num);\n    }\n}"},{"type":"group","name":"Gags","enabled":true,"id":8,"items":[{"type":"trigger","name":"Noharvest","enabled":true,"id":7,"matching":"regexp","whole_words":false,"case_sensitive":false,"text":"^What do you want to harvest?$","actions":[{"action":"gag"}]}],"actions":[]}]}